.hidden {
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity 1s, transform 1s;
}

.show {
  opacity: 1;
  transform: translateX(0%);
}

.reverse {
  opacity: 0;
  transform: translateX(-100%);
  transition: opacity 0.5s ease-in, transform 0.5s ease-in;
}

.showCube {
  opacity: 1;
}

.hideCube {
  opacity: 0;
}

// animation de rotation du texte
@keyframes rotateText {
  0% {
    transform: rotateZ(0deg);
  }
  100% {
    transform: rotateZ(360deg);
  }
}

// animation de rotation des flèches hover
// sur le cube
@keyframes rotatefleche {
  0% {
    transform: translate(-2.7rem, -3.1rem) rotateZ(0deg);
  }
  100% {
    transform: translate(-2.7rem, -3.1rem) rotateZ(360deg);
  }
}

// .parallax img{
//     position: sticky; /* Changer de absolute à fixed */
//     width: 20%;
//     height: 10%;
//     /* Garde les marges pour le positionnement */
//     top: 10%; /* Ajuste selon ton besoin */
//     z-index: 6;
// }
// .fence-droite{
//     translate: 70vh;
// }
// .fence-gauche{
//     translate: -5vh;
// }
.dot{
  height: 5px;
  width: 5px;
  background-color: white;
  position: absolute;
  border-radius: 50%;
  z-index: -9999999999;
  opacity: 0.3;
  @media screen and (max-width: 1280px) {
    display: none;
  }
}

//animation de scroll sur les evenements
.animation_apparait {
  opacity: 0;
  transform: translateY(20px);
  transition: opacity 0.5s ease-out, transform 0.5s ease-out;
}
.animation_apparait.visible {
  opacity: 1;
  transform: translateY(0);
}

//animation ecriture description
.contenue_desc{
  font-size: 50px;
  position: relative;
  margin-bottom: var(--margin-top);
  margin-top: var(--margin-top);
  // text-decoration: underline;
  // simuler le curseur clignotement
&::after{
    content: '|';
    animation : clignotement 500ms step-start infinite;
    position: absolute;
    }
 
  @keyframes clignotement {
    50% {
      opacity: 0;
    }
  }
}

//aniamtion du texte qui s'écris
.contenue_desc{
  font-family: var(--font-family-titre);
  color: var(--couleur-secondaire);
  letter-spacing: var(--letter-spacing);
  font-weight: bold;
  height: 5vh;
  @media screen and (max-width: 608px){
    height: 15vh;
    font-size: 35px;
  }
}

/* Animation d'apparition */
.animation_apparait.visible {
  opacity: 1;
  transform: translateY(0);
}

/* Media Query pour les écrans plus petits (max-width: 1280px) */
@media screen and (max-width: 1280px) {
  .contenufunky h3 {
      filter: saturate(1) brightness(1.1); /* Augmenter la luminosité pour compenser la désaturation */
      padding: 10%;
      font-size: 20px;
  }
}

/* Styles de base pour .contenufunky h3 */
.contenufunky h3 {
  width: 100%;
  font-weight: normal;
  box-shadow: rgba(0, 0, 0, 0.5) 0px 0px 100px 20px inset;
  border-radius: 5px;
  letter-spacing: var(--letter-spacing);
  background: linear-gradient(90deg, rgba(236, 141, 32, 0.7) 0%, rgba(230, 61, 94, 0.7) 50%, rgba(44, 246, 253, 0.3) 100%);
  filter: saturate(0) brightness(1.2); /* Désaturer la partie droite mais augmenter la luminosité */
  transition: filter 0.5s ease, mask-image 0.5s ease;

  mask-image: linear-gradient(to right, black 36%, #0000005c 36%);
  
  /* Appliquer un effet de désaturation uniquement à la partie droite du texte */
  position: relative;
}

.contenufunky h3::after {
  content: "";
  position: absolute;
  top: 0;
  left: 36%;
  width: 64%;
  height: 100%;
  background: inherit; /* Prendre le fond de l'élément parent */
  filter: saturate(0); /* Désaturer uniquement la partie droite */
  z-index: -1; /* Placer l'élément derrière le texte */
}
